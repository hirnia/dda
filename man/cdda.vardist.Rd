% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cdda.vardist.R
\name{cdda.vardist}
\alias{cdda.vardist}
\title{Conditional Directional Dependence Analysis: Variable Distribution}
\usage{
cdda.vardist(
  formula = NULL,
  pred = NULL,
  mod = NULL,
  modval = "mean",
  data = list(),
  B = 200,
  boot.type = "perc",
  conf.level = 0.95,
  values = NULL,
  JN.length = 3,
  ...
)
}
\arguments{
\item{formula}{symbolic formula of the model to be tested or a \code{lm} object}

\item{pred}{variable name of the predictor which serves as the outcome in the alternative model}

\item{mod}{a character indicating the variable name of the moderator which serves as an
interaction term in models.}

\item{modval}{For continuous moderators, character or numeric sequence specifying how the moderator is treated in the model. Possible characters include \code{c("mean", "median", "JN")}, and if a numeric sequence is specified, the 'pick a point' approach will be utilized.}

\item{data}{a required data frame containing the variables in the model (by default variables are taken from the environment which \code{dda.vardist} is called from)}

\item{B}{number of bootstrap samples}

\item{boot.type}{A vector of character strings representing the type of bootstrap confidence intervals required. Must be one of the two values \code{c("perc", "bca")}. \code{boot.type = "bca"} is the default.}

\item{conf.level}{confidence level for boostrap confidence intervals}
}
\value{
A list of class \code{cddavardist} containing the results of the conditional directional dependence analysis.
}
\description{
\code{cdda.vardist} provides information on competing models under moderation
}
\examples{
n <- 1000

         ## --- generate moderator
         z <- sort(rnorm(n))
         z1 <- z[z <= 0]
         z2 <- z[z > 0]

         x1 <- rchisq(length(z1), df = 4) - 4
         e1 <- rchisq(length(z1), df = 3) - 3
         y1 <- 0.5 * x1 + e1

         ## --- y -> x when m > 0
         y2 <- rchisq(length(z2), df = 4) - 4
         e2 <- rchisq(length(z2), df = 3) - 3
         x2 <- 0.25 * y2 + e2

         y <- c(y1, y2); x <- c(x1, x2)

         dat <- data.frame(x, y, z)

         cdda.vardist(y ~ x * z, pred = "x", mod = "z",
                     B = 500, modval = "JN", data = dat)
         ## OR
         m <- lm(y ~ x * z, data = dat)
         test.cdda.vardist<- cdda.vardist(m, pred = "x", mod = "z", data = dat,
                                        B = 500, modval = "JN")
print(test.cdda.vardist)
}
